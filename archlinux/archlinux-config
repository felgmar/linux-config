#!/bin/sh

help()
{
    echo "Usage: $(basename $0) [OPTIONS]

Options:
    --setup-secure-boot     Enable support for secure boot
    --install-tkg-kernel    Install TkG's modified Linux Kernel
    --setup-rootfs          Copy bootloader entries and other config files
    --setup-services        Enable and start some extra services
    --install-packages      Install packages from a predefined list
    --help,-h               Show this message"

    return 1
}

check()
{
    if test "$(whoami)" = "root"
    then
        echo "Do not run this script as $(whoami)"
        return 1
    fi

    for f in kernels packages rootfs tools
    do
        if test ! -d "$f"
        then
            echo "ERROR: Could not find the folder '$f'"
            return 1
        fi
    done

    return $?
}

setup_secure_boot()
{
    test -f "tools/setup.sh" && sh "tools/setup.sh" || return 1
    return $?
}

install_packages()
{
    test -f "packages/setup.sh" && sh "packages/setup.sh" || return 1
    return $?
}

install_tkg_kernel()
{
    test -f "kernels/setup.sh" && sh "kernels/setup.sh" || return 1
    return $?
}

setup_services()
{
    services=('systemd-oomd.socket'
              'systemd-boot-update.service'
              'fail2ban.service'
              'apparmor.service'
              'firewalld.service'
              'ananicy.service'
              'bluetooth.service'
              'libvirtd.socket'
              'libvirtd-ro.socket'
              'libvirtd-admin.socket'
              'fancontrol.service'
              'cronie.service'
              'fstrim.timer'
              'clamav-freshclam.service'
              'gdm.service')

    for service in "${services[@]}"
    do
        if test "$(systemctl is-enabled $service)" != "enabled"
        then
            sudo systemctl enable --now $service
            if test "$service" = "gdm.service"
            then
                sudo systemctl enable $service
            else
                sudo systemctl enable --now $service
            fi
        else
            echo "WARNING: The service $service is already enabled"
            test "$service" = "gdm.service" && break
            if test "$(systemctl is-active $service)" != "active"
            then
                echo "WARNING: Starting the service $service..."
                sudo systemctl start $service
            fi
        fi
    done

    if test "$(systemctl get-default)" != "graphical.target"
    then
        sudo systemctl set-default graphical.target || return 1
    fi

    return $?
}

setup_rootfs()
{
    test -f "rootfs/setup.sh" && sh "rootfs/setup.sh" || return 1
    return $?
}

check

if test -z "$1"
then
    help
    exit 1
fi

if test $# -gt 1
then
    echo "Too many arguments" && help && exit 1
else
    while test $# -eq 1
    do
        case "$1" in
            --setup-secure-boot) setup_secure_boot; exit $?;;
            --install-tkg-kernel) install_tkg_kernel; exit $?;;
            --setup-rootfs) setup_rootfs; exit $?;;
            --setup-services) setup_services; exit $?;;
            --install-packages) install_packages; exit $?;;
            --setup-all)
                install_packages || exit $?
                setup_rootfs || exit $?
                setup_services || exit $?
                install_tkg_kernel || exit $?
                setup_secure_boot || exit $?
            ;;
            --help|-h) help; exit $?;;
            *) printf ":: ERROR: unknown command: $1\n\n" && help && exit $?;;
        esac
        shift
    done
fi
