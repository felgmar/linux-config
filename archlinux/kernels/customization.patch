--- linux-tkg/customization.cfg	2023-08-16 19:55:26.578995885 +0100
+++ customization.cfg	2023-08-16 20:02:59.847296239 +0100
@@ -21,21 +21,21 @@
 _NUKR="true"
 
 # Git mirror to use to get the kernel sources, possible values are "kernel.org", "googlesource.com", "github.com" and "torvalds"
-_git_mirror="kernel.org"
+_git_mirror="torvalds"
 
 # Root folder where to checkout the kernel sources (linux-src-git subdir) and build
 # Note: - Leave empty to use PKGBUILD's dir
 #       - Start with a '/' for an absolute path in which `linux-tkg/linux-src-git/` will be created
 #       - This setting can be used to set the work/build folder to a tmpfs folder
 #         - Requires >= 32GB ram when building a full kernel, should work with less ram with modprobed-db
-_kernel_work_folder=""
+_kernel_work_folder="/tmp"
 
 # Permanent root folder where to keep the git clone (linux-kernel.git subdir) and fetch new blobs
 # Note: - Leave empty to use PKGBUILD's dir
 #       - Start with a '/' for an absolute path in which `linux-tkg/linux-kernel.git/` will be created
 #       - If your internet is faster than your storage, it may be wise to put this folder
 #         in a tmpfs location (although it will reclone after each restart / tmpfs folder cleanup)
-_kernel_source_folder=""
+_kernel_source_folder="/tmp"
 
 # Custom compiler root dirs - Leave empty to use system compilers
 # Example: CUSTOM_GCC_PATH="/home/frog/PKGBUILDS/mostlyportable-gcc/gcc-mostlyportable-9.2.0"
@@ -54,19 +54,19 @@
 # Set to true to use modprobed db to clean config from unneeded modules. Speeds up compilation considerably. Requires root - https://wiki.archlinux.org/index.php/Modprobed-db
 # Using this option can trigger user prompts if the config doesn't go smoothly.
 # !!!! Make sure to have a well populated db !!!! - Leave empty to be asked about it at build time
-_modprobeddb="false"
+_modprobeddb="true"
 
 # modprobed-db database file location
 _modprobeddb_db_path=~/.config/modprobed.db
 
 # Set to "1" to call make menuconfig, "2" to call make nconfig, "3" to call make xconfig, before building the kernel. Set to false to disable and skip the prompt.
-_menunconfig=""
+_menunconfig="disable"
 
 # Set to true to generate a kernel config fragment from your changes in menuconfig/nconfig. Set to false to disable and skip the prompt.
 _diffconfig=""
 
 # Set to the file name where the generated config fragment should be written to. Only used if _diffconfig is active.
-_diffconfig_name=""
+_diffconfig_name="false"
 
 # [install.sh: Generic and Gentoo specific] Dracut options when generating initramfs
 _dracut_options="--lz4"
@@ -89,7 +89,7 @@
 _config_updating="olddefconfig"
 
 # Disable some non-module debugging - See PKGBUILD for the list
-_debugdisable="false"
+_debugdisable="true"
 
 # Strip the vmlinux file after build is done. Set to anything other than "true" if you require debug headers. Default is "true"
 _STRIP="true"
@@ -98,11 +98,11 @@
 
 # CPU scheduler - Options are "pds", "bmq", "cacule", "tt", "bore", "eevdf" or "cfs" (kernel's default)
 # "upds" (TkG's Undead PDS) and "muqss" are also available on legacy kernel revisions
-_cpusched=""
+_cpusched="tt"
 
 # Compiler to use - Options are "gcc" or "llvm".
 # For advanced users.
-_compiler=""
+_compiler="llvm"
 
 # Force the use of the LLVM Integrated Assembler whether using LLVM, LTO or not.
 # Set to "1" to enable.
@@ -143,10 +143,10 @@
 _rr_interval=""
 
 # Set to "true" to disable FUNCTION_TRACER/GRAPH_TRACER, lowering overhead but limiting debugging and analyzing of kernel functions - Kernel default is "false"
-_ftracedisable="false"
+_ftracedisable="true"
 
 # Set to "true" to disable NUMA, lowering overhead, but breaking CUDA/NvEnc on Nvidia equipped systems - Kernel default is "false"
-_numadisable="false"
+_numadisable="true"
 
 # Set to "true" to enable misc additions - May contain temporary fixes pending upstream or changes that can break on non-Arch - Kernel default is "true"
 _misc_adds="true"
@@ -155,10 +155,10 @@
 # Full tickless can give higher performances in case you use isolation of CPUs for tasks
 # and it works only when using the nohz_full kernel parameter, otherwise behaves like idle.
 # Just tickless idle perform better for most platforms.
-_tickless=""
+_tickless="2"
 
 # Set to "true" to use ACS override patch - https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF#Bypassing_the_IOMMU_groups_.28ACS_override_patch.29 - Kernel default is "false"
-_acs_override=""
+_acs_override="false"
 
 # Set to "true" to add Bcache filesystem support. You'll have to install bcachefs-tools-git from AUR for utilities - https://bcachefs.org/ - If in doubt, set to "false"
 # This can be buggy and isn't recommended on a production machine, also enabling this option will not allow you to enable MGLRU.
@@ -169,7 +169,7 @@
 _winesync="false"
 
 # Set to "true" to enable Binder and Ashmem, the kernel modules required to use the android emulator Anbox. ! This doesn't apply to 5.4.y !
-_anbox=""
+_anbox="false"
 
 # A selection of patches from Zen/Liquorix kernel and additional tweaks for a better gaming experience (ZENIFY) - Default is "true"
 _zenify="true"
@@ -235,7 +235,7 @@
 # [Arch only] If you want to bypass the stock naming scheme and enforce something else (example : "linux") - Useful for some bootloaders requiring manual entry editing on each release.
 # !!! It will also change pkgname - If you don't explicitely need this, don't use it !!!
 # Use _kernel_localversion instead on non-Arch based distros
-_custom_pkgbase=""
+_custom_pkgbase="linux-tkg"
 
 # [non-Arch only] Kernel localversion. Putting it to "Mario" will make for example the kernel version be 5.7.0-tkg-Mario (given by uname -r)
 # If left empty, it will use "-tkg-${_cpusched}${_compiler}" where "${_cpusched}" will be replaced by the user chosen scheduler, ${_compiler} will be replaced by "-llvm" if clang is used (nothing for GCC).
@@ -245,16 +245,16 @@
 # Set to your maximum number of CPUs (physical + logical cores) - Lower means less overhead - You can set it to "$(nproc)" to use the current host's CPU(s) core count, or leave empty to use default
 # If you set this to a lower value than you have cores, some cores will be disabled
 # Default Arch kernel value is 320
-_NR_CPUS_value=""
+_NR_CPUS_value="8"
 
 #### LEGACY OPTIONS ####
 
 # Upstreamed version of Fsync from Linux 5.16 for previous kernel versions - https://github.com/andrealmeid/futex_waitv_patches
 # ! Only affect 5.13, 5.14 and 5.15 kernel branches. Safely ignored for 5.16 or newer !
-_fsync_backport="true"
+_fsync_backport="false"
 
 # Fsync legacy, known as FUTEX_WAIT_MULTIPLE (opcode 31) - previous version of fsync required for Valve Proton 4.11, 5.0 and 5.13 - https://steamcommunity.com/games/221410/announcements/detail/2957094910196249305
-_fsync_legacy="true"
+_fsync_legacy="false"
 
 # Set to "true" to enable support for futex2, a DEPRECATED interface that can be used by proton-tkg and proton 5.13 experimental through Fsync - Can be enabled alongside fsync legacy to use it as a fallback
 # https://gitlab.collabora.com/tonyk/linux/-/tree/futex2-dev
@@ -263,7 +263,7 @@
 _fsync_futex2="false"
 
 # Set to "true" to add back missing symbol for AES-NI/AVX support on ZFS - This is a legacy option that can be ignored on 5.10+ kernels - https://github.com/NixOS/nixpkgs/blob/master/pkgs/os-specific/linux/kernel/export_kernel_fpu_functions.patch
-_zfsfix="true"
+_zfsfix="false"
 
 # MuQSS only - CPU scheduler runqueue sharing - No sharing (RQ_NONE), SMT (hyperthread) siblings (RQ_SMT), Multicore siblings (RQ_MC), Symmetric Multi-Processing (RQ_SMP), NUMA (RQ_ALL)
 # Valid values are "none", "smt", "mc", "mc-llc"(for zen), "smp", "all" - Kernel default is "smt"
